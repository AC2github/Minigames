VoteMaps = {}usermessage.Hook( "votemaps_reset", function( um )	VoteMaps = {}end)usermessage.Hook( "votemaps", function( um )	table.insert( VoteMaps, um:ReadString( ) )end)local function CreateVoteMenu()		local votetime = CurTime( ) + 30		local Frame = vgui.Create( "DFrame" )	Frame:SetSize( 250, 200 )	Frame:SetPos( 15, ScrH( ) / 2 - 215 )	Frame:SetTitle( "" )	Frame:SetDraggable( false )	Frame:ShowCloseButton( false )		for k, v in pairs( VoteMaps ) do		Frame:SetPos( 15, ScrH( ) / 2 - ( k * 40 ) )		Frame:SetSize( 250, k * 40 )	end		Frame.Paint = function( )		local var = math.abs( math.sin( CurTime() * 2 ) )		surface.SetDrawColor( 0, 0, 0, 200 )		surface.DrawRect( 0, 0, Frame:GetWide( ), 20 )				draw.SimpleText( "MAP VOTE ("..math.Round(votetime - CurTime( ))..")", "ChatFont", Frame:GetWide( ) / 2, 10, Color( var * 255, 0, 0, var * 255 ), TEXT_ALIGN_CENTER, TEXT_ALIGN_CENTER )		for k, v in pairs( VoteMaps ) do			surface.SetDrawColor( 0, 0, 0, 200 )			surface.DrawRect( 0, 5 + ( k * 30 ), Frame:GetWide( ), 25 )				draw.SimpleText( k..". "..v, "ChatFont", 5, 10 + ( k * 30 ), color_white, TEXT_ALIGN_LEFT, TEXT_ALIGN_LEFT )		end				end		function Frame:Think( )		for k, v in pairs( VoteMaps ) do 			if input.IsKeyDown( k + 1 ) then				Frame:Close( )				RunConsoleCommand( "mg_vote", v )				surface.PlaySound( "buttons/button14.wav" )			end		end				if votetime - CurTime( ) <= 0 then			Frame:Close( )		end	endendusermessage.Hook( "vote", CreateVoteMenu )